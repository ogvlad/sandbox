<style>
    
</style>
<div class="span3">
    @Html.Partial("__SideNav")
</div>
<div class="span8">
    @Scripts.Render("~/static/js/protovis.min.js")
    <script type="text/javascript">

        var causes = ["wounds", "other", "disease"];

        var crimea = [
            { date: "4/1854", wounds: 0, other: 110, disease: 110 },
            { date: "5/1854", wounds: 0, other: 95, disease: 105 },
            { date: "6/1854", wounds: 0, other: 40, disease: 95 },
            { date: "7/1854", wounds: 0, other: 140, disease: 520 },
            { date: "8/1854", wounds: 20, other: 150, disease: 800 },
            { date: "9/1854", wounds: 220, other: 230, disease: 740 },
            { date: "10/1854", wounds: 305, other: 310, disease: 600 },
            { date: "11/1854", wounds: 480, other: 290, disease: 820 },
            { date: "12/1854", wounds: 295, other: 310, disease: 1100 },
            { date: "1/1855", wounds: 230, other: 460, disease: 1440 },
            { date: "2/1855", wounds: 180, other: 520, disease: 1270 },
            { date: "3/1855", wounds: 155, other: 350, disease: 935 },
            { date: "4/1855", wounds: 195, other: 195, disease: 560 },
            { date: "5/1855", wounds: 180, other: 155, disease: 550 },
            { date: "6/1855", wounds: 330, other: 130, disease: 650 },
            { date: "7/1855", wounds: 260, other: 130, disease: 430 },
            { date: "8/1855", wounds: 290, other: 110, disease: 490 },
            { date: "9/1855", wounds: 355, other: 100, disease: 290 },
            { date: "10/1855", wounds: 135, other: 95, disease: 245 },
            { date: "11/1855", wounds: 100, other: 140, disease: 325 },
            { date: "12/1855", wounds: 40, other: 120, disease: 215 },
            { date: "1/1856", wounds: 0, other: 160, disease: 160 },
            { date: "2/1856", wounds: 0, other: 100, disease: 100 },
            { date: "3/1856", wounds: 0, other: 125, disease: 90 }
        ];

        (function () {
            var format = pv.Format.date("%m/%y");
            crimea.forEach(function (d) { d.date = format.parse(d.date); });
        })();

        /* Compute maximum. */
        crimea.forEach(function (d) { return d.max = Math.max(350, d.wounds, d.other, d.disease); });

        /* Scales for radius, angle, and fill. */
        var format = pv.Format.date("%b"),
            radius = pv.Scale.linear(0, 1400).range(0, 275),
            angle = pv.Scale.linear(0, 12).range(Math.PI / 2, 5 * Math.PI / 2),
            fill = pv.colors("lightpink", "darkgray", "lightblue").domain(causes);

        var vis = new pv.Panel()
            .width(800)
            .height(450);

        /* Split the root panel by year. */
        var panel = vis.add(pv.Panel)
            .data([crimea.slice(12), crimea.slice(0, 12)])
            .left(function () { return this.index * 400; });

        /* Add a panel per month, and sort causes by that month's deaths. */
        var wedge = panel.add(pv.Panel)
        .data(function (d) { return d; })
        .add(pv.Wedge)
        .data(function (d) { return causes.sort(function (a, b) { return d[b] - d[a]; }); })
        .left(200)
        .top(150)
        .angle(Math.PI / 6)
        .startAngle(function (c, d) { return angle(d.date.getMonth()); })
        .outerRadius(function (c, d) { return radius(d[c]); })
        .fillStyle(fill)
        .strokeStyle(function () { return this.fillStyle().darker(); })
        .lineWidth(1);

        /* Add a label using the pre-computed maximum value. */
        wedge.add(pv.Wedge)
        .data(["max"])
        .fillStyle(null)
        .strokeStyle(null)
        .anchor("outer").add(pv.Label)
        .text(function (c, d) { return format(d.date); })
        .textAlign("center")
        .textBaseline("bottom")
        .textAngle(function () { return this.anchorTarget().midAngle() + Math.PI / 2; });

        vis.render();
    </script>
</div>
@section scripts
{
}
